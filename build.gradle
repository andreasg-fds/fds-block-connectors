buildscript {
  repositories{
      mavenLocal()
      maven {
          url "http://fds-artifactory.formationds.com:8081/artifactory/fds-maven-all-virtual"
      }
  }
  dependencies {
      classpath group: 'com.formationds', name: 'fds-build-version-plugin', version: '2.0-SNAPSHOT'
      classpath group: 'com.formationds', name: 'fds-build-upload-plugin', version: '1.0-SNAPSHOT'
  }
}

apply plugin: 'com.formationds.fds-build-version-plugin'
apply plugin: 'com.formationds.fds-build-upload-plugin'

if ( !project.hasProperty( 'packageType' ) ){

    project.ext.packageType = 'dev'

    if ( System.env.ghprbPullId != null ){
        project.ext.packageType = 'pr'
    }
}

if (project.ext.packageType == 'release'){
    project.ext.buildType = 'release'
}
else {
    project.ext.buildType = 'debug'
}

if ( !project.hasProperty( 'username' ) ){
    project.ext.username = '';
}

if ( !project.hasProperty( 'password' ) ){
    project.ext.password = '';
}

versionSettings {
    packageType = project.ext.packageType
    username = System.env.GIT_USER
    password = System.env.GIT_PASSWORD
}

uploadSettings {

    repo = 'nightly'
    packageDir = 'build/distributions'
    username = project.ext.username
    password = project.ext.password
}

task updateDevSetup( type: Exec ){
    commandLine 'sudo', 'pip', 'install', '-U', 'fds-dev-setup', '--trusted-host', 'bld-artifactory.formationds.com', '--extra-index-url', 'http://bld-artifactory.formationds.com:8081/artifactory/api/pypi/formation-pip/simple'
}

task runInitialize( type: Exec ){
    commandLine 'sudo', 'fds-initialize'
}

task clean(type:Exec){
    commandLine 'rm', '-rf', 'build'
}

task createDir( type: Exec ){
    commandLine 'mkdir', '-p', 'build'
}

task preBuild( type: Exec ){
    workingDir 'build'
    environment 'build_type', "${project.ext.buildType}"
    commandLine 'cmake', '..'
}

task build(type: Exec){
    workingDir 'build'
    commandLine 'make'
}

task performTests(type: Exec){
    workingDir 'build/src/tests'
    commandLine 'ctest'
}

task postBuild(type: Exec){
    workingDir 'build'
    commandLine 'make', 'install'
}

task buildDeb(){

    doLast {
        ["scst", "nbd"].each {
            def packageName = "fds-block-connectors-${it}-${project.ext.buildType}-${project.ext.PACKAGE_VERSION}"
            def artifactDir = "${buildDir}/artifacts-${it}"
            println "Version: " + project.ext.PACKAGE_VERSION
            println "Dir: " + artifactDir
            println "PackageName: " + packageName
    
            exec {
                commandLine 'mkdir', '-p', "${buildDir}/distributions"
            }
    
            exec {
               commandLine '/usr/local/bin/fpm', '-s', 'dir', '-t', 'deb', '--prefix', "/opt/fds/formation_one/packages/${packageName}", '-C', "${artifactDir}", '--name', "${packageName}", '--version', "${project.ext.PACKAGE_VERSION}", '-p', "${buildDir}/distributions"
            }
        }
    }
}

runInitialize.dependsOn updateDevSetup
handleVersion.dependsOn runInitialize
createDir.dependsOn handleVersion
preBuild.dependsOn createDir
build.dependsOn preBuild
performTests.dependsOn build
postBuild.dependsOn performTests
buildDeb.dependsOn postBuild
rollVersion.dependsOn build
uploadDeb.dependsOn buildDeb
